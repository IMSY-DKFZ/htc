[build-system]
requires = [
  "wheel",
  "setuptools",
  "torch",
  "ninja",
]

[tool.black]
line-length = 120
target-version = ['py39']
preview = true

[tool.isort]
known_first_party = "htc"
profile = "black"
line_length = 120

[tool.cibuildwheel]
build = "cp39-* cp310-*"
skip = "*musllinux*"
# If more than one wheel is built (e.g. cp39 and cp310), the second wheel fails due to a non-clean build directory
# Hence, we just delete it to start fresh
before-build = """\
python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"\
"""
before-test = "pip install pytest"
test-command = [
  '''python -c "import os; from importlib.metadata import version; assert not os.getenv('CI_COMMIT_TAG').startswith('v') or 'v' + version('htc') == os.getenv('CI_COMMIT_TAG'), os.getenv('CI_COMMIT_TAG')"''',
  '''py.test --doctest-modules --import-mode=importlib --collect-only {project}/htc''',
  '''python -c "from htc import settings; assert settings.src_dir == settings.htc_package_dir, settings.src_dir"''',
]

[tool.cibuildwheel.linux]
archs = ["x86_64"]
# We are excluding all the libraries which PyTorch provides
repair-wheel-command = "auditwheel repair --exclude libtorch_cpu.so --exclude libtorch_python.so --exclude libtorch.so --exclude libc10.so -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
repair-wheel-command = "delocate-wheel --ignore-missing-dependencies --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
